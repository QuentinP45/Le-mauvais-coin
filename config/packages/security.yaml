security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory: { memory: ~ }
        database_users:
                    entity: { class: App\Entity\User, property: username }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|scss|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                # Le nom de la route de la page de connexion
                check_path: security_login
                # Le nom de la route où se trouve le formulaire de connexion
                # Si un utilisateur tente d'acceder à une page protégée sans en avoir les droits
                # il sera redirigé sur cette page
                login_path: security_login
                # Securisation des formulaires
                csrf_token_generator: security.csrf.token_manager
                # La page par defaut apres une connexion reussie
                default_target_path: home_user

            logout:
                # La route où se trouve le process de deconnexion
                path: security_logout
                # La route sur laquelle doit etre rediriger l'utilisateur apres une deconnexion
                target: index


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
       - { path: ^/home-user, roles: ROLE_USER}
       - { path: ^/offer/list-user, roles: ROLE_USER}
       - { path: ^/offer/show-user, roles: ROLE_USER}

    encoders:
        App\Entity\User: bcrypt
